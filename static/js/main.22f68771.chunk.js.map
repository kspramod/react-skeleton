{"version":3,"sources":["reportWebVitals.js","app/containers/Dashboard/index.jsx","app/containers/Details/index.jsx","assets/logo.svg","app/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Dashboard","Details","initialValues","firstName","lastName","email","onSubmit","values","a","Promise","r","setTimeout","alert","JSON","stringify","validate","errors","test","props","className","htmlFor","id","name","placeholder","required","type","dirty","isValid","App","src","logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAYeA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDCQ,EANG,kBAChB,8BACE,8C,wCCmEWC,G,MAjEC,kBACd,gCACE,yCACA,cAAC,IAAD,CACEC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,MAAO,IAETC,SAAQ,uCAAE,WAAOC,GAAP,SAAAC,EAAA,sEACF,IAAIC,SAAQ,SAACC,GAAD,OAAOC,WAAWD,EAAG,QAD/B,OAERE,MAAMC,KAAKC,UAAUP,EAAQ,KAAM,IAF3B,2CAAF,sDAIRQ,SAAU,SAACR,GACT,IAAMS,EAAS,GAcf,OAZKT,EAAOJ,YACVa,EAAOb,UAAY,2BAEhBI,EAAOH,WACVY,EAAOZ,SAAW,0BAEfG,EAAOF,MAEA,4CAA4CY,KAAKV,EAAOF,SAClEW,EAAOX,MAAQ,yBAFfW,EAAOX,MAAQ,qBAKVW,GAzBX,SA4BG,SAACE,GAAD,OACC,eAAC,IAAD,2BAAUA,GAAV,IAAiBC,UAAU,cAA3B,UACE,gCACE,uBAAOC,QAAQ,YAAf,wBACA,gCACE,cAAC,IAAD,CAAOC,GAAG,YAAYC,KAAK,YAAYC,YAAY,OAAOC,UAAQ,IACjEN,EAAMF,OAAOb,WAAa,qBAAKkB,GAAG,qBAAR,SAA8BH,EAAMF,OAAOb,kBAI1E,gCACE,uBAAOiB,QAAQ,WAAf,uBACA,gCACE,cAAC,IAAD,CAAOC,GAAG,WAAWC,KAAK,WAAWC,YAAY,MAAMC,UAAQ,IAC9DN,EAAMF,OAAOZ,UAAY,qBAAKiB,GAAG,oBAAR,SAA6BH,EAAMF,OAAOZ,iBAIxE,gCACE,uBAAOgB,QAAQ,QAAf,mBACA,gCACE,cAAC,IAAD,CAAOC,GAAG,QAAQC,KAAK,QAAQC,YAAY,gBAAgBE,KAAK,QAAQD,UAAQ,IAC/EN,EAAMF,OAAOX,OAAS,qBAAKgB,GAAG,iBAAR,SAA0BH,EAAMF,OAAOX,cAIlE,wBAAQoB,KAAK,SAAb,oBACCP,EAAMQ,OAASR,EAAMS,SAAW,4DC9D5B,MAA0B,iC,MCmB1BC,MAbf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKU,IAAKC,EAAMX,UAAU,WAAWY,IAAI,SAD3C,2BAIA,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCNNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7C,M","file":"static/js/main.22f68771.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Dashboard = () => (\n  <div>\n    <h1>Dashboard</h1>\n  </div>\n);\n\nexport default Dashboard;\n","import { Formik, Field, Form } from 'formik';\n\nimport './styles.scss';\n\nconst Details = () => (\n  <div>\n    <h3>Sign Up</h3>\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n      }}\n      onSubmit={async (values) => {\n        await new Promise((r) => setTimeout(r, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validate={(values) => {\n        const errors = {};\n\n        if (!values.firstName) {\n          errors.firstName = 'First Name is required.';\n        }\n        if (!values.lastName) {\n          errors.lastName = 'Last Name is required.';\n        }\n        if (!values.email) {\n          errors.email = 'Email is required.';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      }}\n    >\n      {(props) => (\n        <Form {...props} className=\"signup-form\">\n          <div>\n            <label htmlFor=\"firstName\">First Name</label>\n            <div>\n              <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" required />\n              {props.errors.firstName && <div id=\"feedback-firstName\">{props.errors.firstName}</div>}\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"lastName\">Last Name</label>\n            <div>\n              <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" required />\n              {props.errors.lastName && <div id=\"feedback-lastName\">{props.errors.lastName}</div>}\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <div>\n              <Field id=\"email\" name=\"email\" placeholder=\"jane@acme.com\" type=\"email\" required />\n              {props.errors.email && <div id=\"feedback-email\">{props.errors.email}</div>}\n            </div>\n          </div>\n\n          <button type=\"submit\">Submit</button>\n          {props.dirty && props.isValid && <div>Ready to save</div>}\n        </Form>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default Details;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Dashboard from './containers/Dashboard';\nimport Details from './containers/Details';\n\nimport logo from '../assets/logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        Sample React Skeleton\n      </header>\n      <Dashboard />\n      <Details />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './app/App';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}